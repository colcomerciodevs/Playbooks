- name: Recolectar info de usuarios y exportar a Excel (Solaris)
  hosts: SERVERS_SOLARIS
  become: true
  gather_facts: false

  vars:
    salida_dir: "{{ playbook_dir }}/Salidas_Playbooks"

  tasks:

    # Obtener usuarios reales (UID entre 100 y 59999)
    - name: Obtener usuarios reales
      ansible.builtin.shell: |
        awk -F: '$3 >= 100 && $3 < 60000' /etc/passwd | cut -d: -f1
      register: usuarios
      changed_when: false

    # Obtener id, sudo, shell y estado de passwd -s
    - name: Recolectar datos del usuario
      ansible.builtin.shell: |
        id {{ item }}
        echo "###"
        sudo -lU {{ item }} 2>/dev/null || echo "NO_SUDO"
        echo "###"
        getent passwd {{ item }} | cut -d: -f7
        echo "###"
        passwd -s {{ item }} 2>/dev/null || echo "UNKNOWN_STATUS"
      loop: "{{ usuarios.stdout_lines }}"
      register: info_usuarios
      changed_when: false

    # Guardar datos en reporte_usuarios
    - name: Consolidar resultados
      ansible.builtin.set_fact:
        reporte_usuarios: "{{ info_usuarios.results | map(attribute='stdout') | list }}"

    # Calcular grupo(s) del host actual
    - name: Calcular grupos del host
      ansible.builtin.set_fact:
        grupos_host: >-
          {{
            (groups | dict2items
            | selectattr('value', 'contains', inventory_hostname)
            | map(attribute='key')
            | reject('in', ['all', 'ungrouped'])
            | list
            | join(', '))
          }}

    # Guardar archivo JSON estructurado
    - name: Guardar JSON con info estructurada
      delegate_to: localhost
      run_once: true
      copy:
        dest: "{{ salida_dir }}/usuarios_permisos_SOLARIS.json"
        content: |
          {
          {% for host in play_hosts %}
            "{{ host }}": {
              "ip": "{{ hostvars[host].ansible_host | default(host) }}",
              "ambiente": "{{ hostvars[host].ambiente | default('no definido') }}",
              "grupo": "{{ hostvars[host].grupos_host | default('') }}",
              "usuarios": {{ hostvars[host].reporte_usuarios | to_nice_json }}
            }{% if not loop.last %},{% endif %}
          {% endfor %}
          }

    # Ejecutar script Python que genera el Excel
    - name: Ejecutar script Python para generar Excel
      delegate_to: localhost
      run_once: true
      command: python3 Generar_Excel_Users_Solaris.py
      args:
        chdir: "{{ playbook_dir }}"
      changed_when: false
