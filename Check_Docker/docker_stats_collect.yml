---
- name: Recolectar y exportar docker stats por host
  hosts: docker
  gather_facts: false
  become: true
  vars_files:
    - "{{ playbook_dir }}/vars/docker_stats_vars.yml"

  tasks:
    # 1) Obtener la lista de IDs de contenedores que están en ejecución en el host remoto
    - name: Obtener lista de contenedores
      ansible.builtin.command: docker ps -q
      register: ps_ids
      changed_when: false
      failed_when: false

    # 2) Si no hay contenedores en ejecución, se salta el resto de tareas para ese host
    - name: Saltar si no hay contenedores
      ansible.builtin.meta: end_host
      when: ps_ids.stdout | trim == ""

    # 3) Obtener estadísticas de contenedores en formato NDJSON (un JSON por línea)
    - name: Obtener docker stats como NDJSON
      ansible.builtin.shell: |
        ids="{{ ps_ids.stdout_lines | default([]) | join(' ') }}"
        docker stats --no-stream --format '{{ '{{' }}json .{{ '}}' }}' $ids
      args:
        executable: /bin/bash
      register: docker_stats_ndjson
      changed_when: false

    # Justo después de "Obtener docker stats como NDJSON"
    - name: Obtener número de vCPU del host
      ansible.builtin.command: nproc
      register: host_cpus
      changed_when: false

    # 4) Guardar el JSON de métricas directamente en el controlador (no en el host remoto)
    - name: Guardar JSON de métricas en el controlador
      delegate_to: localhost
      become: false
      ansible.builtin.copy:
        dest: "{{ out_dir }}/{{ inventory_hostname }}.json"
        mode: '0644'
        content: |
          [
          {% for line in docker_stats_ndjson.stdout_lines | default([]) %}
            {{ line }}{% if not loop.last %},{% endif %}
          {% endfor %}
          ]

    # 5) Ejecutar el script Python en el controlador para generar el Excel
    - name: Generar Excel con script externo en el controlador
      delegate_to: localhost
      become: false
      run_once: false
      ansible.builtin.command: >
        python3 {{ playbook_dir }}/scripts/docker_stats_to_excel.py
        {{ out_dir }}/{{ inventory_hostname }}.json
        {{ out_dir }}/{{ inventory_hostname }}.xlsx
        {{ cpu_risk_high }} {{ cpu_risk_medium }}
        {{ mem_risk_high }} {{ mem_risk_medium }}
        {{ pids_risk_high }} {{ pids_risk_medium }}
        {{ host_cpus.stdout | default('1') }}
      register: py_out
      changed_when: true

    # 6) Mostrar en pantalla la salida generada por el script Python y la ubicación del Excel
    - name: Mostrar salida del script
      ansible.builtin.debug:
        msg: |
          {{ py_out.stdout | default('') }}
          Excel: {{ out_dir }}/{{ inventory_hostname }}.xlsx
