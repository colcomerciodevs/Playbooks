- name: Recolectar info de usuarios y exportar a Excel
  hosts: SERVERS_LINUX
  become: true
  gather_facts: false

  vars:
    salida_dir: "{{ playbook_dir }}/Salidas_Playbooks"

  tasks:

    # Obtener usuarios reales con UID >= 1000 y sin caracteres especiales
    - name: Obtener usuarios vÃ¡lidos
      ansible.builtin.shell: |
        awk -F: '$3 >= 1000 && $1 ~ /^[a-zA-Z0-9._-]+$/ && $1 !~ /^(nobody|nfsnobody|apache|postfix|sshd|zabbix|proactiva)$/' /etc/passwd | cut -d: -f1
      register: usuarios

    # Recolectar info de cada usuario: id, sudo, shell, passwd -S
    - name: Recolectar datos de usuarios
      ansible.builtin.shell: |
        usuario="{{ item }}"
        id "$usuario"
        echo "###"
        sudo -lU "$usuario" 2>/dev/null || echo "NO_SUDO"
        echo "###"
        getent passwd "$usuario" | cut -d: -f7
        echo "###"
        passwd -S "$usuario" 2>/dev/null || echo "UNKNOWN_STATUS"
      loop: "{{ usuarios.stdout_lines }}"
      register: info_usuarios

    # Guardar resultados en variable por host
    - name: Consolidar datos por host
      ansible.builtin.set_fact:
        reporte_usuarios: "{{ info_usuarios.results | map(attribute='stdout') | list }}"

    # Determinar grupo(s) del host
    - name: Calcular grupos del host
      ansible.builtin.set_fact:
        grupos_host: "{{ (groups | dict2items
                        | selectattr('value', 'contains', inventory_hostname)
                        | map(attribute='key')
                        | reject('in', ['all', 'ungrouped'])
                        | list
                        | join(', ')) }}"

    # Guardar datos en JSON para el script Python
    - name: Guardar JSON con info estructurada
      delegate_to: localhost
      run_once: true
      ansible.builtin.copy:
        dest: "{{ salida_dir }}/usuarios_permisos.json"
        content: |
          {
          {% for host in play_hosts %}
            "{{ host }}": {
              "ip": "{{ hostvars[host].ansible_host | default(host) }}",
              "ambiente": "{{ hostvars[host].ambiente | default('no definido') }}",
              "grupo": "{{ hostvars[host].grupos_host | default('') }}",
              "usuarios": {{ hostvars[host].reporte_usuarios | to_nice_json }}
            }{{ "," if not loop.last else "" }}
          {% endfor %}
          }

    # Ejecutar script Python para generar el Excel
    - name: Ejecutar script Python para generar Excel
      delegate_to: localhost
      run_once: true
      ansible.builtin.command: python3 Generar_Excel_Users.py
      args:
        chdir: "{{ playbook_dir }}"
